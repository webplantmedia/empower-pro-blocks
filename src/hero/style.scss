.wp-block-empower-pro-blocks-hero {
	position: relative;
	background-color: $black;
	background-size: cover;
	background-position: center center;
	min-height: 430px;
	height: 60vw !important;
	width: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	overflow: hidden;
	-webkit-clip-path: polygon(0% 0%, 100% 0%, 100% calc(100% - 60px), 50% 100%, 0% calc(100% - 60px));
	clip-path: polygon(0% 0%, 100% 0%, 100% calc(100% - 60px), 50% 100%, 0% calc(100% - 60px));

	&.has-parallax {
		background-attachment: fixed;

		// Mobile Safari does not support fixed background attachment properly.
		// See also https://stackoverflow.com/questions/24154666/background-size-cover-not-working-on-ios
		// Chrome on Android does not appear to support the attachment at all: https://issuetracker.google.com/issues/36908439
		@supports (-webkit-overflow-scrolling: touch) {
			background-attachment: scroll;
		}

		// Remove the appearance of scrolling based on OS-level animation preferences.
		@media (prefers-reduced-motion: reduce) {
			background-attachment: scroll;
		}
	}

	&.has-background-dim::before {
		content: "";
		background-color: inherit;
	}

	&.has-background-dim:not(.has-background-gradient)::before,
	.wp-block-cover__gradient-background {
		position: absolute;
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
		z-index: z-index(".wp-block-cover.has-background-dim::before");
	}

	&.has-background-dim:not(.has-background-gradient)::before,
	& .wp-block-cover__gradient-background {
		opacity: 0.5;
	}


	@for $i from 1 through 10 {
		&.has-background-dim.has-background-dim-#{ $i * 10 } {
			&:not(.has-background-gradient)::before {
				opacity: $i * 0.1;
			}
			.wp-block-cover__gradient-background {
				opacity: $i * 0.1;
			}
		}
	}

	// Apply max-width to floated items that have no intrinsic width
	&.alignleft,
	&.alignright {
		max-width: $content-width / 2;
		width: 100%;
	}

	&.alignfull{
		max-width: 1000%;
		width: 100%;
	}

	// Using flexbox without an assigned height property breaks vertical center alignment in IE11.
	// Appending an empty ::after element tricks IE11 into giving the cover image an implicit height, which sidesteps this issue.
	&::after {
		display: block;
		content: "";
		font-size: 0;
		min-height: inherit;

		// IE doesn't support flex so omit that.
		@supports (position: sticky) {
			content: none;
		}
	}

	// Aligned cover blocks should not use our global alignment rules
	&.aligncenter,
	&.alignleft,
	&.alignright {
		display: flex;
	}

	.wp-block-cover__inner-container {
		width: calc(100% - 70px);
		z-index: z-index(".wp-block-cover__inner-container");
		color: $light-gray-100;
	}

	p,
	h1,
	h2,
	h3,
	h4,
	h5,
	h6,
	.wp-block-subhead {
		&:not(.has-text-color) {
			color: inherit;
		}
	}
}

.wp-block-empower-pro-blocks-hero .wp-block-cover__video-background {
	position: absolute;
	filter: brightness(55%);
	top: 50%;
	left: 50%;
	transform: translateX(-50%) translateY(-50%);
	width: 100%;
	height: 100%;
	z-index: z-index(".wp-block-cover__video-background");
	object-fit: cover;
}

// Styles bellow only exist to support older versions of the block.
// Versions that not had inner blocks and used an h2 heading had a section (and not a div) with a class wp-block-cover-image (and not a wp-block-cover).
// We are using the previous referred differences to target old versions.

section.wp-block-cover-image h2,
.wp-block-cover-image-text,
.wp-block-cover-text {
	color: $white;
	a,
	a:hover,
	a:focus,
	a:active {
		color: $white;
	}
}

.wp-block-cover-image
.wp-block-cover {
	&.has-left-content {
		justify-content: flex-start;
	}

	&.has-right-content {
		justify-content: flex-end;
	}
}

section.wp-block-cover-image.has-left-content > h2,
.wp-block-cover-image.has-left-content .wp-block-cover-image-text,
.wp-block-cover.has-left-content .wp-block-cover-text {
	margin-left: 0;
	text-align: left;
}

section.wp-block-cover-image.has-right-content > h2,
.wp-block-cover-image.has-right-content .wp-block-cover-image-text,
.wp-block-cover.has-right-content .wp-block-cover-text {
	margin-right: 0;
	text-align: right;
}

section.wp-block-cover-image > h2,
.wp-block-cover-image .wp-block-cover-image-text,
.wp-block-cover .wp-block-cover-text {
	font-size: 2em;
	line-height: 1.25;
	z-index: 1;
	margin-bottom: 0;
	max-width: $content-width;
	padding: $block-padding;
	text-align: center;
}
.wp-block-empower-pro-blocks-hero{
	.button-wrapper {
		display: inline-block;
		position: relative;
	}

	.no-x-margin{
		margin-left: 0 !important;
		margin-right: 0 !important;
	}

	.editor-button{
		background-color: #ffcc2a !important;
		position: relative;
		font-family: "Oswald", sans-serif;
		font-size: 17px;
		font-weight: 400;
		letter-spacing: 0.5px;
		line-height: 1;
		text-decoration: none;
		text-transform: none;
		font-style: normal;
		border-radius: 0;
		/* border: 0 solid transparent; */
		color: #fff;
		cursor: pointer;
		padding: 14px 26px 14px 26px;
		text-align: center;
		white-space: normal;
		width: auto;
		transition: all 0.4s;
		display: inline-block;

		&:focus,
		&:hover {
			// box-shadow: none;
			// -webkit-transform: translateY(-2px);
			// -moz-transform: translateY(-2px);
			// transform: translateY(-2px);

			&::after {
				top: 0;
				left: 0;
				border-color: transparent !important;
			}
		}

		&::after {
			content: "";
			width: 100%;
			height: 100%;
			border: 1px solid black;
			position: absolute;
			left: 4px;
			top: 4px;
			-webkit-transition: all 0.3s;
			transition: all 0.3s;
			z-index: 1;
		}
	}

	.caption{
		max-width: 300px;
	}

	.Caption-box-align-right{
		position: absolute;
		width: 100%;
		padding: 10px;
		bottom: 200px;
		left: 0px;
		-moz-transform: scale(-1, 1);
		-webkit-transform: scale(-1, 1);
		-o-transform: scale(-1, 1);
		-ms-transform: scale(-1, 1);
		transform: scale(-1, 1);
	
	}
	
	.Caption-box-align-left{
		position: absolute;
		width: 100%;
		left: 0px;
		padding: 10px;
		bottom: 200px;
	}

	p.caption-right{
		position: absolute !important;
		top: 80% !important;
		left: 140px;
		right: auto !important;
		bottom: auto !important;
		border-width: 0 !important;
		margin-bottom: 28px !important;
		text-align: left;
		-moz-transform: scale(-1, 1);
		-webkit-transform: scale(-1, 1);
		-o-transform: scale(-1, 1);
		-ms-transform: scale(-1, 1);
		transform: scale(-1, 1);
		&::before {
			content: "";
			position: absolute !important;
			right: auto !important;
			left: -30px !important;
			top: -75px !important;
			border-right: transparent !important;
			height: 50px !important;
			width: 50px !important;
			border-top: 3px solid #fff !important;
			border-right: 3px solid #fff !important;
			-moz-transform: skewY(-45deg) !important;
			-webkit-transform: skewY(45deg) !important;
			transform: skewY(45deg) !important; 
		}

		&::after {
			content: "";
			position: absolute !important;
			top: -103px;
			right: auto;
			left: -35px;
			width: 10px !important;
			height: 10px !important;
			border-radius: 99em !important;
			background-color: #fff !important;
		}
	}

	p.caption-left{
		position: absolute !important;
		top: 80% !important;
		left: 150px;
		right: auto !important;
		bottom: auto !important;
		border-width: 0 !important;
		margin-bottom: 28px !important;
		text-align: left;
		&::before {
			content: "";
			position: absolute !important;
			right: auto !important;
			left: 15px !important;
			top: -75px !important;
			border-right: transparent !important;
			height: 50px !important;
			width: 50px !important;
			border-top: 3px solid #fff !important;
			border-left: 3px solid #fff !important;
			-moz-transform: skewY(45deg) !important;
			-webkit-transform: skewY(-45deg) !important;
			transform: skewY(-45deg) !important; 
		}

		&::after {
			content: "";
			position: absolute !important;
			top: -103px;
			right: auto;
			left: 60px;
			width: 10px !important;
			height: 10px !important;
			border-radius: 99em !important;
			background-color: #fff !important;
		}
	}

	.typewriter {
		overflow: hidden; 
		white-space: nowrap; 
		margin: 0 auto; 
		letter-spacing: .15em; 
		animation: 
		  typing 3.5s steps(40, end),
	  }
	  
	  @keyframes typing {
		from { width: 0 }
		to { width: 100% }
	  }

	  

	  
	.hero-heading{
		max-width: 100%;
	}

	.hero-text{
		max-width: 750px;
		text-align: center ;
		margin-left: auto !important;
		margin-right: auto !important;
	}

	.widthFull {
		width: 100%;
	} 

	.no-x-padding {
		padding-left: 0 !important;
		padding-right: 0 !important;
	}

	.textcenter {
		text-align: center;
	}
}